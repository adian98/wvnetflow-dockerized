diff -rupN flow-tools-0.68.5.1/lib/ftchash.c flow-tools-0.68.5.2/lib/ftchash.c
--- flow-tools-0.68.5.1/lib/ftchash.c	2008-03-10 10:56:15.000000000 -0500
+++ flow-tools-0.68.5.2/lib/ftchash.c	2013-02-26 13:07:57.072364653 -0600
@@ -97,6 +97,18 @@ struct ftchash *ftchash_new(int h_size,
 } /* ftchash_new */
 
 /*
+ * function: ftchash_set_max_entries
+ *
+ *    cap the limit on the number of hash entries allowed (to control flow storms)
+ */
+void ftchash_set_max_entries(struct ftchash *ftch, uint64_t max_entries)
+{
+  if (ftch) {
+    ftch->max_entries = max_entries;
+  }
+} /* ftchash_new */
+
+/*
  * function: ftchash_free
  *
  *   free storage allocated with ftchash_new
@@ -192,6 +204,10 @@ void *ftchash_update(struct ftchash *ftc
 
   }
 
+  if ((ftch->max_entries) && (ftch->entries >= ftch->max_entries)) {
+    return (void*)0L;
+  }
+
   /* not found, allocate new entry */
   if (!(rec = (struct ftchash_rec_gen*) ftchash_alloc_rec(ftch))) {
     fterr_warnx("ftchash_alloc_rec(): failed");
diff -rupN flow-tools-0.68.5.1/lib/ftlib.h flow-tools-0.68.5.2/lib/ftlib.h
--- flow-tools-0.68.5.1/lib/ftlib.h	2010-08-25 11:49:44.000000000 -0500
+++ flow-tools-0.68.5.2/lib/ftlib.h	2013-02-26 13:07:57.084364652 -0600
@@ -190,6 +190,10 @@ struct mymsghdr {
 
 #define FT_LP_MAXLINE          1024   /* maximum length of line */
 
+#define FT_MAX_PEER_HASH_COUNT 10000	/* maximum number of peers to track in a hash
+					 * for source/destination-destination-count reports
+					 */
+
 /* TLV_ - stream value
  * DEC_ - bit in internal header to indicate successful decode
  */
@@ -2065,6 +2069,7 @@ struct ftchash {
   unsigned int key_size;                            /* size of key */
   int   chunk_size;                          /* chunk size (entries * d_size */
   uint64_t entries;                           /* entries in hash table */
+  uint64_t max_entries;                       /* max entries in hash table */
   void *traverse_rec;                        /* record when traversing */
   struct ftchash_chunk *traverse_chunk;      /* chunk when traversing */
   uint64_t traverse_srec;                     /* sorted rec when traversing */
@@ -2667,6 +2672,7 @@ struct ftvar {
 /* ftchash_ */
 struct ftchash *ftchash_new(int h_size, int d_size, int key_size,
   int chunk_entries);
+void ftchash_set_max_entries(struct ftchash *ftch, uint64_t max_entries);
 void *ftchash_lookup(struct ftchash *ftch, void *key, uint32_t hash);
 void ftchash_free(struct ftchash *ftch);
 void *ftchash_update(struct ftchash *ftch, void *newrec, uint32_t hash);
diff -rupN flow-tools-0.68.5.1/lib/ftstat.c flow-tools-0.68.5.2/lib/ftstat.c
--- flow-tools-0.68.5.1/lib/ftstat.c	2009-02-07 13:57:34.000000000 -0600
+++ flow-tools-0.68.5.2/lib/ftstat.c	2013-02-26 13:07:57.084364652 -0600
@@ -10932,6 +10932,10 @@ int ftstat_rpt_66_accum(struct ftstat_rp
       fterr_warnx("ftchash_new(): failed");
       return -1;
     }
+
+#ifdef FT_MAX_PEER_HASH_COUNT
+    ftchash_set_max_entries(ftch_recprefixhp->ftch, FT_MAX_PEER_HASH_COUNT);
+#endif
   }
 
   FT_RECGET_DSTADDR(cur,rec,*fo);
@@ -10956,6 +10960,12 @@ int ftstat_rpt_66_accum(struct ftstat_rp
 
   if (!(ftch_recprefixsp = ftchash_update(ftch_recprefixhp->ftch,
     &ftch_recprefixs, hash))) {
+
+#ifdef FT_MAX_PEER_HASH_COUNT
+    if (ftch_recprefixhp->ftch->entries >= ftch_recprefixhp->ftch->max_entries)
+      return 0;
+#endif
+
     fterr_warnx("ftch_update(): failed");
     return -1;
   }
@@ -11103,6 +11113,10 @@ int ftstat_rpt_67_accum(struct ftstat_rp
       fterr_warnx("ftchash_new(): failed");
       return -1;
     }
+
+#ifdef FT_MAX_PEER_HASH_COUNT
+    ftchash_set_max_entries(ftch_recprefixhp->ftch, FT_MAX_PEER_HASH_COUNT);
+#endif
   }
 
   FT_RECGET_SRCADDR(cur,rec,*fo);
@@ -11127,6 +11141,12 @@ int ftstat_rpt_67_accum(struct ftstat_rp
 
   if (!(ftch_recprefixsp = ftchash_update(ftch_recprefixhp->ftch,
     &ftch_recprefixs, hash))) {
+
+#ifdef FT_MAX_PEER_HASH_COUNT
+    if (ftch_recprefixhp->ftch->entries >= ftch_recprefixhp->ftch->max_entries)
+      return 0;
+#endif
+
     fterr_warnx("ftch_update(): failed");
     return -1;
   }
diff -rupN flow-tools-0.68.5.1/lib/support.c flow-tools-0.68.5.2/lib/support.c
--- flow-tools-0.68.5.1/lib/support.c	2008-02-20 20:31:42.000000000 -0600
+++ flow-tools-0.68.5.2/lib/support.c	2013-02-26 13:03:31.420376973 -0600
@@ -283,15 +283,13 @@ uint32_t scan_ip(char *s)
   struct in_addr *ina;
   uint32_t addr = 0;
   unsigned int n;
-  int dns, shift = 0;
+  int shift = 0, dns = 1, ipv4 = 1;
   char *t;
 
   /* if there is anything ascii in here, this may be a hostname */
-  for (dns = 0, t = s; *t; ++t) {
-    if (islower((int)*t) || isupper((int)*t)) {
-      dns = 1;
-      break;
-    }
+  for (t = s; *t; ++t) {
+    if (! (isdigit((int)*t) || (*t == '.')) ) ipv4=0;			/* not a simple IPv4 */
+    if (! (isalnum((int)*t) || (*t == '.') || (*t == '-')) ) dns = 0;	/* not a DNS name */
   }
 
   if (dns) {
@@ -311,6 +309,8 @@ uint32_t scan_ip(char *s)
   } /* dns */
 
 numeric:
+  if (! ipv4) return 0;
+
   while (1) {
 
     /* n is the nibble */
