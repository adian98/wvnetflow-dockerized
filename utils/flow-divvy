#!/usr/bin/perl

# this script called from flow-capture for post-processing
#
# this script takes a single capture file and splits it up into multiple smaller files. The example here
# splits by "geography", but it could be anything. The flow-tools filter file 'geo-split.filter' is invoked, but
# it's name and location can be changed.
#
# e.g., the source file /dev/shm/ft-v05.2010-03-18.052851-0500
# could split out three geographies, creating the destination file(s):
#   /opt/netflow/capture/geography1/ft-v05.2010-03-18.052851-0500
#   /opt/netflow/capture/geography2/ft-v05.2010-03-18.052851-0500
#   /opt/netflow/capture/geography3/ft-v05.2010-03-18.052851-0500
#
# The filter definitions can enforce uniqueness (e.g., each flow goes to just one file), or overlap
# (each flow can go to more than one file).

use strict;

my $debug = 0;
my $ftCat = 'flow-cat';		# or flow-merge
my $ftNfilter = 'flow-nfilter';
my @geographies =  qw/ NA EMEA AP OTHER LAO INTERNET /;
my $ftDir;
my $selfDir = ($0 =~ /^(.*)\/[^\/]+$/) ? $1 : '.';
my $geoFilterFile = '/opt/netflow/conf/geo-split.filter';
my $tRoot = '/opt/netflow/capture';	# target root directory

# where to search for flow-tools files...
my @ftDirs = (
	undef,
	$selfDir . '/',
	"/usr/local/netflow/bin/",
	"/usr/local/webview/flow-tools/bin/"
);

foreach (@ftDirs) {
	if (-x "$_$ftCat") {
		$ftDir = $_;
		&logit("Located flow-tools in " . ($ftDir || "[search path]")) if ($debug);
		last;
	}
}

if (! -x "$ftDir$ftCat") {
	&logit("Could not locate $ftCat");
	exit 1;
}

if (! -x "$ftDir$ftNfilter") {
	&logit("Could not locate $ftNfilter");
	exit 1;
}


# main loop

while (my $file = shift @ARGV) {	# file to copy
	my $dFile = $1 if ($file =~ /([^\/]*)$/);
	my $tFile = "tmp-" . $dFile;
	my $purgeSource = 0;

	&logit("Source: $file (" . (-s $file) . " bytes)");

	foreach (@geographies) {
		my $tDir = "$tRoot/" . lc($_);

		if (! -d $tDir) {
			&logit("Creating $tDir");
			`mkdir -p $tDir`;
		}

		my $cmd = "$ftDir$ftCat $file | $ftDir$ftNfilter -f $geoFilterFile -v REGION=$_ -z 9 > $tDir/$tFile 2>&1";
		my $results = `$cmd`;

		if ($?) {		# error
			&logit($cmd);
			&logit("result=$?");
			&logit($results);
			&logit("Source file not removed due to error");
			undef $purgeSource;
		}
		else {
			if (! rename("$tDir/$tFile", "$tDir/$dFile")) {
				&logit("could not rename '$tDir/$tFile', '$tDir/$file': $!");
				undef $purgeSource;
			}
			else {
				&logit("Destination: $tDir/$dFile (" . (-s "$tDir/$dFile") . " bytes)");
			}
		}
	}

	if ($purgeSource) {
		if (! unlink($file) ) {
			&logit("could not unlink original $file: $!");
		}
	}
}
exit 0;

sub logit
{
	open(LOG, ">>/var/log/flow-divvy.log");

	foreach (@_) {
		foreach (split(/\n/)) {
			print LOG (scalar localtime()), " ", $_, "\n";
		}
	}

	close(LOG);
}

